{"ast":null,"code":"// Checking for Winner takes a bit of work\n// We use JavaScript Sets to check players choices\n// against winning combinations\n// Online there is more compact version but I prefer this one\nconst win = [// rows\n[0, 1, 2], [3, 4, 5], [6, 7, 8], // cols\n[0, 3, 6], [1, 4, 7], [2, 5, 8], // diagonal\n[0, 4, 8], [2, 4, 6]];\n\nconst checkForWinner = gameState => {\n  // get array of box id's\n  // can't be a winner in less than 5 turns\n  if (gameState.length < 5) return 'No Winner Yet';\n  let p0 = gameState.filter(item => {\n    if (item.player == 0) return item;\n  });\n  p0 = p0.map(item => item.id);\n  let px = gameState.filter(item => {\n    if (item.player == 1) return item;\n  });\n  px = px.map(item => item.id);\n\n  if (p0 != null && px != null) {\n    var win0 = win.filter(item => {\n      return isSuperset(new Set(p0), new Set(item));\n    });\n    var winX = win.filter(item => {\n      return isSuperset(new Set(px), new Set(item));\n    });\n  }\n\n  if (win0.length > 0) return 'Player O ';else if (winX.length > 0) return 'Player X ';\n  return 'No Winner Yet';\n}; // check if subset is in the set\n\n\nfunction isSuperset(set, subset) {\n  for (let elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default checkForWinner;","map":{"version":3,"names":["win","checkForWinner","gameState","length","p0","filter","item","player","map","id","px","win0","isSuperset","Set","winX","set","subset","elem","has"],"sources":["/Users/tinacollier/Desktop/tic-tac-toe/src/winner.js"],"sourcesContent":["// Checking for Winner takes a bit of work\n// We use JavaScript Sets to check players choices\n// against winning combinations\n// Online there is more compact version but I prefer this one\n\nconst win = [\n    // rows\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    // cols\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    // diagonal\n    [0, 4, 8],\n    [2, 4, 6],\n];\n\n\n\nconst checkForWinner = (gameState) => {\n// get array of box id's\n// can't be a winner in less than 5 turns\n    if (gameState.length < 5) return 'No Winner Yet';\n    let p0 = gameState.filter((item) => {\n        if (item.player == 0) return item;\n    });\n    p0 = p0.map((item) => item.id);\n    let px = gameState.filter((item) => {\n        if (item.player == 1) return item;\n    });\n    px = px.map((item) => item.id);\n    if (p0 != null && px != null) {\n        var win0 = win.filter((item) => {\n        return isSuperset(new Set(p0), new Set(item));\n        });\n        var winX = win.filter((item) => {\n        return isSuperset(new Set(px), new Set(item));\n        });\n    }\n    if (win0.length > 0) return 'Player O ';\n    else if (winX.length > 0) return 'Player X ';\n    return 'No Winner Yet';\n    };\n    // check if subset is in the set\n    function isSuperset(set, subset) {\n    for (let elem of subset) {\n        if (!set.has(elem)) {\n        return false;\n        }\n    }\n    return true;\n}\n\n\nexport default checkForWinner;\n  "],"mappings":"AAAA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,CACR;AACA,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFQ,EAGR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHQ,EAIR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJQ,EAKR;AACA,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANQ,EAOR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPQ,EAQR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARQ,EASR;AACA,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAVQ,EAWR,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAXQ,CAAZ;;AAgBA,MAAMC,cAAc,GAAIC,SAAD,IAAe;EACtC;EACA;EACI,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B,OAAO,eAAP;EAC1B,IAAIC,EAAE,GAAGF,SAAS,CAACG,MAAV,CAAkBC,IAAD,IAAU;IAChC,IAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB,OAAOD,IAAP;EACzB,CAFQ,CAAT;EAGAF,EAAE,GAAGA,EAAE,CAACI,GAAH,CAAQF,IAAD,IAAUA,IAAI,CAACG,EAAtB,CAAL;EACA,IAAIC,EAAE,GAAGR,SAAS,CAACG,MAAV,CAAkBC,IAAD,IAAU;IAChC,IAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB,OAAOD,IAAP;EACzB,CAFQ,CAAT;EAGAI,EAAE,GAAGA,EAAE,CAACF,GAAH,CAAQF,IAAD,IAAUA,IAAI,CAACG,EAAtB,CAAL;;EACA,IAAIL,EAAE,IAAI,IAAN,IAAcM,EAAE,IAAI,IAAxB,EAA8B;IAC1B,IAAIC,IAAI,GAAGX,GAAG,CAACK,MAAJ,CAAYC,IAAD,IAAU;MAChC,OAAOM,UAAU,CAAC,IAAIC,GAAJ,CAAQT,EAAR,CAAD,EAAc,IAAIS,GAAJ,CAAQP,IAAR,CAAd,CAAjB;IACC,CAFU,CAAX;IAGA,IAAIQ,IAAI,GAAGd,GAAG,CAACK,MAAJ,CAAYC,IAAD,IAAU;MAChC,OAAOM,UAAU,CAAC,IAAIC,GAAJ,CAAQH,EAAR,CAAD,EAAc,IAAIG,GAAJ,CAAQP,IAAR,CAAd,CAAjB;IACC,CAFU,CAAX;EAGH;;EACD,IAAIK,IAAI,CAACR,MAAL,GAAc,CAAlB,EAAqB,OAAO,WAAP,CAArB,KACK,IAAIW,IAAI,CAACX,MAAL,GAAc,CAAlB,EAAqB,OAAO,WAAP;EAC1B,OAAO,eAAP;AACC,CAvBL,C,CAwBI;;;AACA,SAASS,UAAT,CAAoBG,GAApB,EAAyBC,MAAzB,EAAiC;EACjC,KAAK,IAAIC,IAAT,IAAiBD,MAAjB,EAAyB;IACrB,IAAI,CAACD,GAAG,CAACG,GAAJ,CAAQD,IAAR,CAAL,EAAoB;MACpB,OAAO,KAAP;IACC;EACJ;;EACD,OAAO,IAAP;AACH;;AAGD,eAAehB,cAAf"},"metadata":{},"sourceType":"module"}